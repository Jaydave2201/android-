// Generated by view binder compiler. Do not edit!
package house.rent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import house.rent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListHouseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivHouse;

  @NonNull
  public final TextView tvFee;

  @NonNull
  public final TextView tvLocationCardView;

  @NonNull
  public final TextView tvPeriod;

  @NonNull
  public final TextView tvTitle;

  private ListHouseBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivHouse,
      @NonNull TextView tvFee, @NonNull TextView tvLocationCardView, @NonNull TextView tvPeriod,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.ivHouse = ivHouse;
    this.tvFee = tvFee;
    this.tvLocationCardView = tvLocationCardView;
    this.tvPeriod = tvPeriod;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListHouseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListHouseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_house, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListHouseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivHouse;
      ImageView ivHouse = ViewBindings.findChildViewById(rootView, id);
      if (ivHouse == null) {
        break missingId;
      }

      id = R.id.tvFee;
      TextView tvFee = ViewBindings.findChildViewById(rootView, id);
      if (tvFee == null) {
        break missingId;
      }

      id = R.id.tvLocationCardView;
      TextView tvLocationCardView = ViewBindings.findChildViewById(rootView, id);
      if (tvLocationCardView == null) {
        break missingId;
      }

      id = R.id.tvPeriod;
      TextView tvPeriod = ViewBindings.findChildViewById(rootView, id);
      if (tvPeriod == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ListHouseBinding((LinearLayout) rootView, ivHouse, tvFee, tvLocationCardView,
          tvPeriod, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
