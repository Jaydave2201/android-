// Generated by view binder compiler. Do not edit!
package house.rent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import house.rent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPostAdBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnPost;

  @NonNull
  public final EditText etAddress;

  @NonNull
  public final EditText etContactEmail;

  @NonNull
  public final EditText etContactName;

  @NonNull
  public final EditText etContactNumber;

  @NonNull
  public final EditText etDescription;

  @NonNull
  public final EditText etLocation;

  @NonNull
  public final EditText etNumOfBaths;

  @NonNull
  public final EditText etNumOfBeds;

  @NonNull
  public final EditText etRentFee;

  @NonNull
  public final EditText etTitle;

  @NonNull
  public final Spinner spinnerPeriod;

  private ActivityPostAdBinding(@NonNull LinearLayout rootView, @NonNull Button btnPost,
      @NonNull EditText etAddress, @NonNull EditText etContactEmail,
      @NonNull EditText etContactName, @NonNull EditText etContactNumber,
      @NonNull EditText etDescription, @NonNull EditText etLocation, @NonNull EditText etNumOfBaths,
      @NonNull EditText etNumOfBeds, @NonNull EditText etRentFee, @NonNull EditText etTitle,
      @NonNull Spinner spinnerPeriod) {
    this.rootView = rootView;
    this.btnPost = btnPost;
    this.etAddress = etAddress;
    this.etContactEmail = etContactEmail;
    this.etContactName = etContactName;
    this.etContactNumber = etContactNumber;
    this.etDescription = etDescription;
    this.etLocation = etLocation;
    this.etNumOfBaths = etNumOfBaths;
    this.etNumOfBeds = etNumOfBeds;
    this.etRentFee = etRentFee;
    this.etTitle = etTitle;
    this.spinnerPeriod = spinnerPeriod;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostAdBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostAdBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_post_ad, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostAdBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPost;
      Button btnPost = ViewBindings.findChildViewById(rootView, id);
      if (btnPost == null) {
        break missingId;
      }

      id = R.id.etAddress;
      EditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.etContactEmail;
      EditText etContactEmail = ViewBindings.findChildViewById(rootView, id);
      if (etContactEmail == null) {
        break missingId;
      }

      id = R.id.etContactName;
      EditText etContactName = ViewBindings.findChildViewById(rootView, id);
      if (etContactName == null) {
        break missingId;
      }

      id = R.id.etContactNumber;
      EditText etContactNumber = ViewBindings.findChildViewById(rootView, id);
      if (etContactNumber == null) {
        break missingId;
      }

      id = R.id.etDescription;
      EditText etDescription = ViewBindings.findChildViewById(rootView, id);
      if (etDescription == null) {
        break missingId;
      }

      id = R.id.etLocation;
      EditText etLocation = ViewBindings.findChildViewById(rootView, id);
      if (etLocation == null) {
        break missingId;
      }

      id = R.id.etNumOfBaths;
      EditText etNumOfBaths = ViewBindings.findChildViewById(rootView, id);
      if (etNumOfBaths == null) {
        break missingId;
      }

      id = R.id.etNumOfBeds;
      EditText etNumOfBeds = ViewBindings.findChildViewById(rootView, id);
      if (etNumOfBeds == null) {
        break missingId;
      }

      id = R.id.etRentFee;
      EditText etRentFee = ViewBindings.findChildViewById(rootView, id);
      if (etRentFee == null) {
        break missingId;
      }

      id = R.id.etTitle;
      EditText etTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTitle == null) {
        break missingId;
      }

      id = R.id.spinnerPeriod;
      Spinner spinnerPeriod = ViewBindings.findChildViewById(rootView, id);
      if (spinnerPeriod == null) {
        break missingId;
      }

      return new ActivityPostAdBinding((LinearLayout) rootView, btnPost, etAddress, etContactEmail,
          etContactName, etContactNumber, etDescription, etLocation, etNumOfBaths, etNumOfBeds,
          etRentFee, etTitle, spinnerPeriod);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
